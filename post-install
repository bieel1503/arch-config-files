#!/bin/bash
path="$PWD"
cd "$HOME"

files="$path/config-files"
musics="$path/update-musics"
lazer="$path/update-lazer"
xres="$files/.Xresources"
xinit="$files/.xinitrc"
nobeep="$files/nobeep.conf"
numlock="$files/activate-numlock.conf"
i3="$files/i3/config"
i3status="$files/i3status/config"
firewall="$files/stateful-firewall.rules"
vimrc="$files/.vimrc"
git="$files/.gitconfig"

echo "Creating folders..."

#Create folders that i normally use.
for folder in "Documents" "Downloads" "Musics" "Applications" ".vim"
do
	mkdir -v "$folder"
done

sleep 1
echo "Moving config files..."

if [ ! -f ".gitconfig" ]; then
	cp -v "$git" "$PWD"
fi

if [ ! -f ".vimrc" ]; then
	cp -v "$vimrc" "$PWD"
fi

if [ ! -f ".Xresources" ]; then
	cp -v "$xres" "$PWD"
fi

if [ ! -f ".xinitrc" ]; then
	cp -v "$xinit" "$PWD"
fi

if [ ! -f ".config/i3/config" ]; then
	mkdir -pv ".config/i3"
	cp -v "$i3" ".config/i3/"
fi

if [ ! -f ".config/i3status/config" ]; then
	mkdir -pv ".config/i3status/"
	cp -v "$i3status" ".config/i3status/"
fi

sleep 1
echo "Moving scripts..."

if [ ! -f "Applications/osu-lazer/update-lazer" ]; then
	mkdir -pv "Applications/osu-lazer"
	cp -v "$lazer" "Applications/osu-lazer/"
fi

if [ ! -f "Musics/update-musics" ]; then
	cp -v "$musics" "Musics/"
fi

sleep 1
echo "Disabling beep sound..."

#Blacklist annoying beep module.
if [ ! -f "/etc/modprobe.d/nobeep.conf" ]; then
	sudo cp -v "$nobeep" "/etc/modprobe.d/nobeep.conf"
fi


sleep 1
echo "Enabling numlock for getty..."

#Activate numlock on getty.
if [ ! -f "/etc/systemd/system/getty@.service.d/activate-numlock.conf" ]; then
	sudo mkdir -pv "/etc/systemd/system/getty@.service.d/"
	sudo cp -v "$numlock" "/etc/systemd/system/getty@.service.d/activate-numlock.conf"
fi


sleep 1
echo "Adding iptables rules..."

#Add iptables rules
sudo cat $firewall > /etc/iptables/iptables.rules

sleep 1
echo "Some other configs..."

#From: 'https://github.com/ChrisTitusTech/firewallsetup'
# Drop ICMP echo-request messages sent to broadcast or multicast addresses
sudo echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
# Drop source routed packets
sudo echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route
# Enable TCP SYN cookie protection from SYN floods
sudo echo 1 > /proc/sys/net/ipv4/tcp_syncookies
# Don't accept ICMP redirect messages
sudo echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects
# Don't send ICMP redirect messages
sudo echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects
# Enable source address spoofing protection
sudo echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter
# Log packets with impossible source addresses
sudo echo 1 > /proc/sys/net/ipv4/conf/all/log_martians

sleep 1
echo "Enabling services..."

#Enable networkmanager and iptables services
sudo systemctl enable NetworkManager.service
sudo systemctl enable iptables.service

sleep 1
echo "Adding Vundle to vim..."

if [ ! -f ".vim/bundle/Vundle.vim" ]; then
	mkdir -pv ".vim/bundle/"
	git clone "https://github.com/VundleVim/Vundle.vim.git" ".vim/bundle/Vundle.vim"
fi

sleep 1
echo "Starting pikaur installation..."

if [ -z "$(ls -a /bin/ | grep pikaur)" ]; then
	git clone "https://aur.archlinux.org/pikaur.git" "Downloads/pikaur"
	cd "Downloads/pikaur"
	makepkg -fsri
	cd ..
	rm -rdv "pikaur/"
	cd "$PWD"
	echo "pikaur installed! now, remember some apps: minecraft-launcher, surf, usbimager and google-chrome."
fi

sleep 1
echo "Creating boot entry..."

#Add a boot entry. Where '/dev/sdX' and 'Y' are the drive and partition number where the ESP is located. This assume that you made the partitions using LABEL.
efibootmgr --disk /dev/sdX --part Y --create --label "Arch Linux" --loader /vmlinuz-linux --unicode 'root=LABEL=linux_root ipv6.disable=1 rw initrd=\initramfs-linux.img initrd=\intel-ucode.img' --verbose
echo "Boot entry created? Remember to set a boot order!"
